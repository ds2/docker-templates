ARG linuxDistro=oraclelinux
ARG distroVersion=9
ARG rustVersion=""
FROM ${linuxDistro}:${distroVersion}

ENV TZ=Etc/UTC
ENV RUST_BACKTRACE=1
ARG protocVersion=23.2

# prepare image
RUN dnf repolist; yum repolist -v enabled; dnf update -y; dnf upgrade -y
RUN dnf -y install rpmdevtools rpm-build rpm-sign gcc openssl-devel pkg-config zsh git sudo protobuf createrepo pinentry vim python3-pip rsync
RUN adduser -c "RPM build user for Rust stuff" -g users -G wheel -s /bin/zsh -m rusty
ADD sudoers.txt /etc/sudoers.d/rusty

# install semver tool
RUN curl -s https://packagecloud.io/install/repositories/lexxy23/releases/script.rpm.sh | sudo bash
RUN dnf install -y semver-formatter
RUN semver-formatter -V

# install azure cli
RUN rpm --import https://packages.microsoft.com/keys/microsoft.asc
RUN export distroVersion=$(cat /etc/system-release-cpe | cut -d ':' -f5); echo "distroVersion is ${distroVersion}"; if [ $distroVersion == 9 ]; then dnf install -y https://packages.microsoft.com/config/rhel/9.0/packages-microsoft-prod.rpm; elif [ $distroVersion == 8 ]; then sudo dnf install -y https://packages.microsoft.com/config/rhel/8/packages-microsoft-prod.rpm; else echo "No Distro installed??"; exit 23; fi; dnf update -y
RUN dnf list --showduplicates azure-cli; dnf -y install azure-cli
RUN az --version

# install azcopy
RUN curl -o /tmp/azcopy.tgz -L https://aka.ms/downloadazcopy-v10-linux; cd /tmp; tar -xzvf /tmp/azcopy.tgz --strip 1; find /tmp; chmod 755 /tmp/azcopy; cp /tmp/azcopy /usr/bin/; azcopy --version

# install protoc
RUN cd /tmp; export distroVersion=$(cat /etc/system-release-cpe | cut -d ':' -f5); echo "distroVersion is ${distroVersion}"; PB_REL="https://github.com/protocolbuffers/protobuf/releases"; curl -LO $PB_REL/download/v${protocVersion}/protoc-${protocVersion}-linux-x86_64.zip; unzip protoc-${protocVersion}-linux-x86_64.zip; dnf install -y protobuf-compiler || mv bin/protoc /usr/local/bin/protoc
RUN protoc --version

# install MS SBOM tool
RUN dnf install -y libicu; curl -Lo /usr/local/bin/sbom-tool https://github.com/microsoft/sbom-tool/releases/download/v1.1.2/sbom-tool-linux-x64; chmod a+x /usr/local/bin/sbom-tool
RUN sbom-tool version

# setup user environment (we do not run as root!!)
USER rusty
WORKDIR /tmp
ENV CARGO_BUILD_TARGET='x86_64-unknown-linux-gnu'

# install rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh  -s -- --profile minimal --no-modify-path -y
RUN . ~/.cargo/env; cargo version

RUN pip3 install --user pre-commit
RUN export PATH=$PATH:$HOME/.local/bin:; pre-commit --version

# prepare runs
ENV GNUPGHOME_ALT=/home/rusty/gnupg-alt
ADD --chown=rusty:users ZSHRC.txt /home/rusty/.zshrc
ENV CARGO_HOME=/home/rusty/.cargo
ENV PERFORM_CLEAN_TARGET=0
ENV CARGO_TARGET_DIR=target
ENV SUDO_CLEAN_TARGET=0
RUN mv ~/.cargo/env ~/.cargo/env.orig; echo "" >~/.cargo/env

USER root
COPY entrypoint.sh /entrypoint.sh
COPY createRpms.sh /usr/local/bin/

USER rusty
ENTRYPOINT [ "/entrypoint.sh" ]
WORKDIR /work
CMD [ "/bin/zsh" ]
