ARG linuxDistro="debian"
ARG distroVersion="bookworm"
ARG rustVersion=""
FROM ${linuxDistro}:${distroVersion}

ENV TZ=Etc/UTC
ENV RUST_BACKTRACE=1
ARG semverRpmVersion="0.3.0-1"
ARG protocVersion=22.0

# prepare image
RUN apt-get -y update; apt-get -y upgrade
RUN apt-get install -y zsh sudo git protobuf-compiler python3-pip vim curl unzip pre-commit lsb-release pkg-config rsync
RUN useradd -c "build user for Rust stuff" -g users -s /bin/zsh -m rusty
ADD sudoers.txt /etc/sudoers.d/rusty

# install semver tool
RUN curl -s https://packagecloud.io/install/repositories/lexxy23/releases/script.deb.sh | sudo bash; apt-get install -y semver-formatter=${semverRpmVersion}; semver-formatter -V

# install azure cli
RUN mkdir -p /etc/apt/keyrings; curl -sLS https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/keyrings/microsoft.gpg > /dev/null; chmod go+r /etc/apt/keyrings/microsoft.gpg
RUN AZ_REPO=$(lsb_release -cs); echo "deb [arch=`dpkg --print-architecture` signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | tee /etc/apt/sources.list.d/azure-cli.list
RUN apt-get -y update; apt-get -y install azure-cli
RUN az --version

# install azcopy
RUN curl -o /tmp/azcopy.tgz -L https://aka.ms/downloadazcopy-v10-linux; cd /tmp; tar -xzvf /tmp/azcopy.tgz --strip 1; find /tmp; chmod 755 /tmp/azcopy; cp /tmp/azcopy /usr/bin/; azcopy --version

# install protoc
RUN protoc --version

# install MS SBOM tool
RUN apt-get install -y libicu; curl -Lo /usr/local/bin/sbom-tool https://github.com/microsoft/sbom-tool/releases/download/v1.1.2/sbom-tool-linux-x64; chmod a+x /usr/local/bin/sbom-tool
RUN sbom-tool version

# setup user environment (we do not run as root!!)
USER rusty
WORKDIR /tmp
ENV CARGO_BUILD_TARGET='x86_64-unknown-linux-gnu'

# install rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh  -s -- --profile minimal --no-modify-path -y
RUN . ~/.cargo/env; cargo version

RUN pip3 install --user pre-commit || true
RUN pip3 install --user --break-system-packages pre-commit || true
RUN pre-commit --version

# prepare runs
ENV GNUPGHOME_ALT=/home/rusty/gnupg-alt
ADD --chown=rusty:users zshrc.txt /home/rusty/.zshrc
ENV CARGO_HOME=/home/rusty/.cargo
ENV PERFORM_CLEAN_TARGET=0
ENV CARGO_TARGET_DIR=target
ENV SUDO_CLEAN_TARGET=0
RUN mv ~/.cargo/env ~/.cargo/env.orig; echo "" >~/.cargo/env

USER root
COPY entrypoint.sh /entrypoint.sh
COPY createDeb.sh /usr/local/bin/

USER rusty
ENTRYPOINT [ "/entrypoint.sh" ]
WORKDIR /work
CMD [ "/bin/zsh" ]
