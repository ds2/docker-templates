name: publish to Quay

on:
  push:
    branches:
      - develop

jobs:
  publish-quay:
    name: Build Publish
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        containers:
          [
            {
              path: "package-cloud",
              registry: "quay.io",
              repository: "ds2/packagecloud-cli",
              shortTag: "pc-",
            },
            {
              path: "rust-debian",
              registry: "quay.io",
              repository: "ds2/rust-debian",
              buildArgs: "linuxDistro=debian \n
                distroVersion=bookworm",
              tag: "bookworm",
              shortTag: "bw-",
            },
            {
              path: "rust-debian",
              registry: "quay.io",
              repository: "ds2/rust-debian",
              buildArgs: "linuxDistro=debian \n
                distroVersion=bullseye",
              tag: "be",
              shortTag: "be-",
            },
            {
              path: "rust-debian",
              registry: "quay.io",
              repository: "ds2/rust-debian",
              buildArgs: "linuxDistro=ubuntu \n
                distroVersion=jammy",
              tag: "jammy",
              shortTag: "jm-",
            },
            {
              path: "enterpriselinux-rust",
              registry: "quay.io",
              repository: "ds2/enterpriselinux-rust",
              buildArgs: "linuxDistro=oraclelinux \n
                distroVersion=8",
              tag: "oraclelinux8",
              shortTag: "ol8-",
            },
            {
              path: "enterpriselinux-rust",
              registry: "quay.io",
              repository: "ds2/enterpriselinux-rust",
              buildArgs: "linuxDistro=oraclelinux \n
                distroVersion=9",
              tag: "oraclelinux9",
              shortTag: "ol9-",
            },
            {
              path: "enterpriselinux-rust",
              registry: "quay.io",
              repository: "ds2/enterpriselinux-rust",
              buildArgs: "linuxDistro=almalinux \n
                distroVersion=9",
              tag: "almalinux9",
              shortTag: "alm9-",
            },
          ]
    steps:
      - name: checkout project ${{matrix.containers.path}}
        uses: actions/checkout@v3
        with:
          fetch-depth: 5
      - name: get short sha checksum
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 8
      - name: check modified files
        id: check_files
        run: |
          run_job=false
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD
          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo "checking file $file to be from ${{matrix.containers.path}}"
            if [[ $file != ${{matrix.containers.path}}/* ]]; then
              echo "ignoring.."
            else
              echo "found changes!"
              run_job=true
              break
            fi
          done < files.txt
          echo "Outcome will be set to: $run_job"
          echo "run_job=$run_job" >> $GITHUB_OUTPUT
      - name: Buildah Action
        id: build-image-buildah
        if: steps.check_files.outputs.run_job == 'true'
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ matrix.containers.repository || matrix.containers.path }}
          context: ./${{ matrix.containers.path }}
          tags: latest ${{matrix.containers.shortTag || ''}}${{ steps.short-sha.outputs.sha }} ${{matrix.containers.tag || ''}}
          build-args: ${{ matrix.containers.buildArgs || '' }}
          containerfiles: |
            ./${{ matrix.containers.path }}/Containerfile
          labels: |
            build_on:github
      - name: Push To Registry
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        if: ${{ matrix.containers.registry && steps.build-image-buildah.outputs.image && steps.build-image-buildah.outcome == 'success' }}
        with:
          image: ${{ steps.build-image-buildah.outputs.image }}
          tags: ${{ steps.build-image-buildah.outputs.tags }}
          registry: ${{matrix.containers.registry}}
          username: ${{ secrets.QUAY_IO_REGISTRY_USERNAME }}
          password: ${{ secrets.QUAY_IO_REGISTRY_PASSWORD }}
      - name: Print image url
        if: ${{steps.push-to-quay.outcome == 'success'}}
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
