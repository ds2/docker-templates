name: Test Dockerfile(s)
on:
  pull_request:
  push:
    branches:
      - develop

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-image-matrix:
    name: Build images via Buildah
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        path:
          - node-yarn-fe-builder
          - oraclelinux8-rust
          - enterpriselinux-rust
    steps:
      - name: checkout project ${{matrix.path}}
        uses: actions/checkout@v3
      # - name: Check file existence
      #   id: check_files
      #   uses: andstor/file-existence-action@v1
      #   with:
      #     files: "Containerfile .registry-data"
      - name: configure endpoints
        working-directory: ${{matrix.path}}
        id: register-endpoint
        # if: ${{ always() && hashFiles('.registry-data') }}
        run: |
          pwd
          ls -alFh
          if [ -f .registry-data ]; then
            source .registry-data
          fi
          echo "::set-output name=registry::$registry"
          echo "::set-output name=repository::$repository"
      - name: Buildah Action
        id: build-image-buildah
        if: ${{ success() }}
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ matrix.path }}
          context: ./${{ matrix.path }}
          tags: latest ${{ github.sha }} ${{github.ref_name}}
          build-args: |
            distroVersion=9
            linuxDistro=oraclelinux
          containerfiles: |
            ./${{ matrix.path }}/Containerfile
          labels: |
            build_on:github
      # - name: Push To quay.io
      #   id: push-to-quay
      #   uses: redhat-actions/push-to-registry@v2
      #   with:
      #     image: ${{ steps.build-image-buildah.outputs.image }}
      #     tags: ${{ steps.build-image-buildah.outputs.tags }}
      #     registry: quay.io/ds2
      #     username: ${{ secrets.QUAY_IO_REGISTRY_USERNAME }}
      #     password: ${{ secrets.QUAY_IO_REGISTRY_PASSWORD }}
      # - name: Print image url
      #   run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  cicd_build8:
    name: build cicd build8 image
    runs-on: ubuntu-latest
    env:
      REPO_PATH: cicd/build8
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
          # tags: ${env.REPO_PATH}:latest

  cicd_build17:
    name: build cicd build17 image
    runs-on: ubuntu-latest
    env:
      REPO_PATH: cicd/build17
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  terraform:
    name: build image terraform
    runs-on: ubuntu-latest
    env:
      REPO_PATH: terraform
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  payara-jndi-web:
    name: build image payara web
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "payara-jndi-web"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  payara-jndi-full:
    name: build image payara full
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "payara-jndi-full"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  k8s-fw:
    name: build image k8s filewatcher
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "kubernetes/filewatcher"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  k8s-ghar:
    name: build image k8s ghar
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "kubernetes/github-actionrunner"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  java11:
    name: build image java11 execjre
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "java11/exec-jre"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  java8:
    name: build image java8 execjre
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "java8/exec-jre"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  openjdk8:
    name: build image openjdk8 execjre
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "openjdk8/execjre"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  openjdk11:
    name: build image openjdk11 execjre
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "openjdk11/execjre"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  latex:
    name: build image latex
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "latex"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  operatorsdk:
    name: build image operatorsdk
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "operator-sdk"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  cicd-jmeter:
    name: build image cicd jmeter
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "cicd/jmeter"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  cicd-tca11:
    name: build image cicd tca11
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "cicd/tca11"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
  cicd-jkslave:
    name: build image cicd jenkins
    runs-on: ubuntu-latest
    env:
      REPO_PATH: "cicd/tca11"
    steps:
      - name: checkout project ${{env.REPO_PATH}}
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image for ${{env.REPO_PATH}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{env.REPO_PATH}}
